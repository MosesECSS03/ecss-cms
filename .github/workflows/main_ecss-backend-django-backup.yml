name: ECSS Backend Django

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout
      id-token: write  # This is required for Azure login

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Fetch previous commit (before push)
        run: |
          git fetch origin main --depth=2
          echo "Before push commit:"
          git log --oneline -n 2  # Show the last 2 commits

      - name: Check for changes in djangoPython and venv directories between before and after push
        id: check_changes
        run: |
          echo "Checking for changes in the djangoPython and venv directories between before and after push..."
          git fetch origin main --depth=2  # Fetch the last 2 commits
          CHANGES=$(git diff --name-only HEAD~1 HEAD -- djangoPython/ venv/)

          if [ -z "$CHANGES" ]; then
            echo "No changes detected in djangoPython or venv directories. Skipping build and deploy."
            echo "::set-output name=changes_detected::false"
          else
            echo "Changes detected in djangoPython or venv directories. Proceeding with build and deploy."
            echo "::set-output name=changes_detected::true"
          fi

      - name: Install dependencies (if changes detected)
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        run: |
          python -m venv venv  # Create a virtual environment in the current directory
          source venv/bin/activate  # Activate virtual environment
          pip install -r requirements.txt  # Install dependencies

      - name: Collect static files from djangoPython/djangoPython
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        run: |
          source venv/bin/activate  # Activate virtual environment before running collectstatic
          pip install -r corsheader 
          python djangoPython/manage.py collectstatic --noinput --settings=djangoPython.settings  # Collect static files

      - name: Zip artifact for deployment (excluding static files, .git, and other unneeded directories)
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        run: |
          zip -r release.zip ./djangoPython ./venv/* requirements.txt -x "static/*" -x ".git/*"  # Include only necessary directories/files

      - name: Login to Azure
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_01E6C8A212504569A3E418BCCCBB0947 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AF53037E7A2840779D7BBBA99B205BD1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F754611B88D7432FA2F0EBA31E894E04 }}

      - name: Deploy to Azure Web App
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'ecss-backend-django-backup'
          slot-name: 'Production'
          package: release.zip

      - name: Cleanup (optional)
        run: |
          echo "Cleaning up"
          rm -rf venv  # Remove virtual environment after deployment
