name: Build and deploy Node.js app to Azure Web App - ecss-backend-node-backup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # Ensure you're in the backend directory, where the package-lock.json exists
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
         # cache: 'npm'  # Enable caching for faster builds

      - name: Install dependencies and build
        run: |
          cd backend  # Change to the backend folder where package-lock.json is
          npm install  # This will now work if the lock file exists
          npm run build --if-present

      - name: Zip artifact for deployment
        run: zip -r -9 -q release.zip backend -x "backend/node_modules/*" "backend/.git/*" "backend/.github/*" "backend/*.log" "backend/.env"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4901EDA5559D46D6AD0BC2538D306048 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_E8377962942948B6AF9E603DC6FC34F9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6698A0A466C84E63BC6261DA7FAD5B8D }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ecss-backend-node-backup'
          slot-name: 'Production'
          package: ./release.zip  # Deploy ZIP directly
          clean: false  # Do not delete files before deploying
          restart: false  # Avoid unnecessary app restarts
