name: Build and deploy Node.js app to Azure Web App - ecss-backend-node

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout
      id-token: write  # This is required for requesting the JWT
    environment:
      name: 'Production'

    steps:
      - uses: actions/checkout@v4

      - name: Fetch previous commit (before push)
        run: |
          git fetch origin main --depth=2
          echo "Before push commit:"
          git log --oneline -n 2  # Show the last 2 commits

      - name: Check for changes between before and after push
        id: check_changes
        run: |
          echo "Checking for changes between before and after push..."
  
          # Ensure we fetch the previous commit to compare against
          git fetch origin main --depth=2  # Fetch the last 2 commits

          # Use git diff to directly compare the previous commit (HEAD^) and the current commit (HEAD)
          CHANGES=$(git diff --name-only HEAD~1 HEAD)
  
          # Check if changes are detected
          if [ -z "$CHANGES" ]; then
            echo "No changes detected. Skipping build and deploy."
            echo "::set-output name=changes_detected::false"
            exit 0  # Exit early if no changes are detected
          else
            echo "Changes detected. Proceeding with build and deploy."
            echo "::set-output name=changes_detected::true"
          fi

      - name: Debug changes detected
        run: 'echo "Changes detected: ${{ steps.check_changes.outputs.changes_detected }}"'

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        run: |
          cd backend
          npm install
          npm run build --if-present
          # npm run test --if-present

      - name: Zip artifact for deployment (only backend folder)
        run: |
          cd backend
          zip -r ../release.zip .  # Create zip file

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: Login to Azure
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}  # Deploy only if changes were detected
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_41A26900721847DFB378D91324F04C5C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2F80B66AC3E847918F02B61E622A3768 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5AB7D5C3556C4887A1D6861E627F89F7 }}

      # Only proceed with deployment if changes are detected
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}  # Deploy only if changes were detected
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ecss-backend-node'
          slot-name: 'Production'
          package: ./release.zip  # Use the zip file created from the backend folder

      - name: Ensure deployment continues in background
        run: |
          echo "Deployment started. This will continue in the background."
          exit 0  # Ensures job ends successfully after deployment
